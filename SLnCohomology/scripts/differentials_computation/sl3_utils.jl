using Pkg
# Pkg.activate(normpath(joinpath(@__DIR__, "./")))
Pkg.activate("/home/mizerka/Desktop/LowCohomologySOS") # you need to change this path for the path of LowCohomologySOS at your computer
using LinearAlgebra
ENV["JULIA_NUM_THREADS"] = Sys.CPU_THREADS÷2
LinearAlgebra.BLAS.set_num_threads(Sys.CPU_THREADS÷2)

# We employ the package "Groups" of Marek Kaluba (https://github.com/kalmarek/Groups.jl)
# and the package "LowCohomologySOS" of Marek and Piotr (https://github.com/piotrmizerka/LowCohomologySOS)
# Pkg.add("Groups") # once added, no need to try to add it again - this line can be commented out in this case
# Pkg.add(url="https://github.com/piotrmizerka/LowCohomologySOS") # as above
using Groups
using LowCohomologySOS
using JuMP

include("../../src/helpful_functions.jl")

# Determine ball of radius 8 for elementary matrix basis.
# Only the ball of that size covers all the differential data.
sl3 = MatrixGroups.SpecialLinearGroup{3}(Int8)
S = gens(sl3)
S_inv =[S; inv.(S)]

# Stabilisers and boundary data with orientations (copied from Ben's notebook)
m2_arrays_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 0 0 1], 1),
    ([-1 0 0; 0 1 0; 0 0 -1], 1),
    ([1 0 0; 0 -1 0; 0 0 -1], 1),
    ([-1 0 0; 0 0 1; 0 1 0], -1),
    ([1 0 0; 0 0 -1; 0 1 0], -1),
    ([1 0 0; 0 0 1; 0 -1 0], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], -1),
    ([0 -1 0; 1 0 0; 0 0 1], -1),
    ([0 1 0; -1 0 0; 0 0 1], -1),
    ([0 1 0; 1 0 0; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 1 0; 0 0 1; 1 0 0], 1),
    ([0 -1 0; 0 0 -1; 1 0 0], 1),
    ([0 -1 0; 0 0 1; -1 0 0], 1),
    ([0 1 0; 0 0 -1; -1 0 0], 1),
    ([0 0 1; 1 0 0; 0 1 0], 1),
    ([0 0 -1; -1 0 0; 0 1 0], 1),
    ([0 0 -1; 1 0 0; 0 -1 0], 1),
    ([0 0 1; -1 0 0; 0 -1 0], 1),
    ([0 0 -1; 0 1 0; 1 0 0], -1),
    ([0 0 1; 0 -1 0; 1 0 0], -1),
    ([0 0 1; 0 1 0; -1 0 0], -1),
    ([0 0 -1; 0 -1 0; -1 0 0], -1),
]
m31_arrays_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 0 0 1], 1),
    ([-1 0 0; 1 1 0; 0 0 -1], -1),
    ([1 0 0; -1 -1 0; 0 0 -1], -1),
    ([0 1 0; 1 0 0; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 -1 0; 1 1 0; 0 0 1], 1),
    ([0 1 0; -1 -1 0; 0 0 1], 1),
    ([-1 -1 0; 1 0 0; 0 0 1], 1),
    ([1 1 0; -1 0 0; 0 0 1], 1),
    ([-1 -1 0; 0 1 0; 0 0 -1], -1),
    ([1 1 0; 0 -1 0; 0 0 -1], -1)
]
m32_arrays_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 1 1 1], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], -1),
    ([1 0 0; 0 0 1; -1 -1 -1], 1),
    ([1 0 0; -1 -1 -1; 0 1 0], 1),
    ([-1 0 0; 1 1 1; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 1 0; 1 0 0; -1 -1 -1], 1),
    ([0 1 0; 0 0 1; 1 0 0], 1),
    ([0 -1 0; 0 0 -1; 1 1 1], -1),
    ([0 -1 0; 1 1 1; -1 0 0], -1),
    ([0 1 0; -1 -1 -1; 0 0 1], 1),
    ([0 0 1; 1 0 0; 0 1 0], 1),
    ([0 0 -1; -1 0 0; 1 1 1], -1),
    ([0 0 -1; 0 -1 0; -1 0 0], -1),
    ([0 0 1; 0 1 0; -1 -1 -1], 1),
    ([0 0 1; -1 -1 -1; 1 0 0], 1),
    ([0 0 -1; 1 1 1; 0 -1 0], -1),
    ([1 1 1; -1 0 0; 0 -1 0], -1),
    ([-1 -1 -1; 1 0 0; 0 0 1], 1),
    ([-1 -1 -1; 0 1 0; 1 0 0], 1),
    ([1 1 1; 0 -1 0; 0 0 -1], -1),
    ([1 1 1; 0 0 -1; -1 0 0], -1),
    ([-1 -1 -1; 0 0 1; 0 1 0], 1)
]
m4_arrays_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 1 0 1], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], 1),
    ([1 0 0; 0 0 1; -1 -1 0], -1),
    ([-1 0 0; 1 1 0; 0 0 -1], -1),
    ([1 0 0; -1 -1 0; -1 0 -1], 1),
    ([1 0 0; -1 0 -1; 0 1 0], -1),
    ([-1 0 0; 1 0 1; 1 1 0], 1)
]
m5_arrays_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 0 -1; 0 -1 0], 1),
    ([1 0 0; -1 -1 0; -1 0 -1], 1),
    ([-1 0 0; 1 0 1; 1 1 0], 1),
    ([0 1 0; 1 0 0; -1 -1 -1], 1),
    ([0 1 0; -1 -1 0; 1 0 1], 1),
    ([0 -1 0; -1 0 -1; 1 1 0], 1),
    ([0 -1 0; 1 1 1; -1 0 0], 1),
    ([0 0 -1; -1 0 0; 1 1 1], 1),
    ([0 0 1; 1 1 0; -1 0 -1], 1),
    ([0 0 -1; 1 0 1; -1 -1 0], 1),
    ([0 0 1; -1 -1 -1; 1 0 0], 1),
    ([-1 -1 0; 1 0 0; 1 1 1], 1),
    ([-1 -1 0; 0 1 0; 0 0 -1], 1),
    ([1 1 0; 0 0 1; 0 -1 0], 1),
    ([1 1 0; -1 -1 -1; -1 0 0], 1),
    ([1 0 1; -1 0 0; -1 -1 -1], 1),
    ([-1 0 -1; 0 -1 0; 0 0 1], 1),
    ([1 0 1; 0 0 -1; 0 1 0], 1),
    ([-1 0 -1; 1 1 1; 1 0 0], 1),
    ([1 1 1; 0 -1 0; 0 0 -1], 1),
    ([-1 -1 -1; 0 0 1; 0 1 0], 1),
    ([-1 -1 -1; 1 1 0; 1 0 1], 1),
    ([1 1 1; -1 0 -1; -1 -1 0], 1)
]
d311_coset_coeffs = [
    ([0 1 0; 0 0 1; 1 1 0], 1),
    ([0 -1 0; 0 0 -1; 1 1 0], 1),
    ([0 -1 0; 0 0 1; -1 -1 0], 1),
    ([0 1 0; 0 0 -1; -1 -1 0], 1),
    ([0 -1 0; 1 1 0; 0 0 1], -1),
    ([0 1 0; -1 -1 0; 0 0 1], -1),
    ([0 1 0; 1 1 0; 0 0 -1], -1),
    ([0 -1 0; -1 -1 0; 0 0 -1], -1),
    ([0 0 -1; 0 1 0; 1 1 0], -1),
    ([0 0 1; 0 -1 0; 1 1 0], -1),
    ([0 0 1; 0 1 0; -1 -1 0], -1),
    ([0 0 -1; 0 -1 0; -1 -1 0], -1),
    ([0 0 1; 1 1 0; 0 1 0], 1),
    ([0 0 -1; -1 -1 0; 0 1 0], 1),
    ([0 0 -1; 1 1 0; 0 -1 0], 1),
    ([0 0 1; -1 -1 0; 0 -1 0], 1),
    ([1 1 0; 0 1 0; 0 0 1], 1),
    ([-1 -1 0; 0 -1 0; 0 0 1], 1),
    ([-1 -1 0; 0 1 0; 0 0 -1], 1),
    ([1 1 0; 0 -1 0; 0 0 -1], 1),
    ([-1 -1 0; 0 0 1; 0 1 0], -1),
    ([1 1 0; 0 0 -1; 0 1 0], -1),
    ([1 1 0; 0 0 1; 0 -1 0], -1),
    ([-1 -1 0; 0 0 -1; 0 -1 0], -1)
]
d312_coset_coeffs = [
    ([-1 0 0; 0 0 1; 1 1 0], 1),
    ([1 0 0; 0 0 -1; 1 1 0], 1),
    ([1 0 0; 0 0 1; -1 -1 0], 1),
    ([-1 0 0; 0 0 -1; -1 -1 0], 1),
    ([1 0 0; 1 1 0; 0 0 1], -1),
    ([-1 0 0; -1 -1 0; 0 0 1], -1),
    ([-1 0 0; 1 1 0; 0 0 -1], -1),
    ([1 0 0; -1 -1 0; 0 0 -1], -1),
    ([0 0 1; 1 0 0; 1 1 0], -1),
    ([0 0 -1; -1 0 0; 1 1 0], -1),
    ([0 0 -1; 1 0 0; -1 -1 0], -1),
    ([0 0 1; -1 0 0; -1 -1 0], -1),
    ([0 0 -1; 1 1 0; 1 0 0], 1),
    ([0 0 1; -1 -1 0; 1 0 0], 1),
    ([0 0 1; 1 1 0; -1 0 0], 1),
    ([0 0 -1; -1 -1 0; -1 0 0], 1),
    ([-1 -1 0; 1 0 0; 0 0 1], 1),
    ([1 1 0; -1 0 0; 0 0 1], 1),
    ([1 1 0; 1 0 0; 0 0 -1], 1),
    ([-1 -1 0; -1 0 0; 0 0 -1], 1),
    ([1 1 0; 0 0 1; 1 0 0], -1),
    ([-1 -1 0; 0 0 -1; 1 0 0], -1),
    ([-1 -1 0; 0 0 1; -1 0 0], -1),
    ([1 1 0; 0 0 -1; -1 0 0], -1)
]
d313_coset_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 0 0 1], 1),
    ([-1 0 0; 0 1 0; 0 0 -1], 1),
    ([1 0 0; 0 -1 0; 0 0 -1], 1),
    ([-1 0 0; 0 0 1; 0 1 0], -1),
    ([1 0 0; 0 0 -1; 0 1 0], -1),
    ([1 0 0; 0 0 1; 0 -1 0], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], -1),
    ([0 -1 0; 1 0 0; 0 0 1], -1),
    ([0 1 0; -1 0 0; 0 0 1], -1),
    ([0 1 0; 1 0 0; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 1 0; 0 0 1; 1 0 0], 1),
    ([0 -1 0; 0 0 -1; 1 0 0], 1),
    ([0 -1 0; 0 0 1; -1 0 0], 1),
    ([0 1 0; 0 0 -1; -1 0 0], 1),
    ([0 0 1; 1 0 0; 0 1 0], 1),
    ([0 0 -1; -1 0 0; 0 1 0], 1),
    ([0 0 -1; 1 0 0; 0 -1 0], 1),
    ([0 0 1; -1 0 0; 0 -1 0], 1),
    ([0 0 -1; 0 1 0; 1 0 0], -1),
    ([0 0 1; 0 -1 0; 1 0 0], -1),
    ([0 0 1; 0 1 0; -1 0 0], -1),
    ([0 0 -1; 0 -1 0; -1 0 0], -1)
]
d321_coset_coeffs = [
    ([0 1 0; 0 0 1; 1 1 1], 1),
    ([0 -1 0; 0 0 -1; 1 1 1], 1),
    ([0 -1 0; 0 0 1; -1 -1 -1], 1),
    ([0 1 0; 0 0 -1; -1 -1 -1], 1),
    ([0 -1 0; 1 1 1; 0 0 1], -1),
    ([0 1 0; -1 -1 -1; 0 0 1], -1),
    ([0 1 0; 1 1 1; 0 0 -1], -1),
    ([0 -1 0; -1 -1 -1; 0 0 -1], -1),
    ([0 0 -1; 0 1 0; 1 1 1], -1),
    ([0 0 1; 0 -1 0; 1 1 1], -1),
    ([0 0 1; 0 1 0; -1 -1 -1], -1),
    ([0 0 -1; 0 -1 0; -1 -1 -1], -1),
    ([0 0 1; 1 1 1; 0 1 0], 1),
    ([0 0 -1; -1 -1 -1; 0 1 0], 1),
    ([0 0 -1; 1 1 1; 0 -1 0], 1),
    ([0 0 1; -1 -1 -1; 0 -1 0], 1),
    ([1 1 1; 0 1 0; 0 0 1], 1),
    ([-1 -1 -1; 0 -1 0; 0 0 1], 1),
    ([-1 -1 -1; 0 1 0; 0 0 -1], 1),
    ([1 1 1; 0 -1 0; 0 0 -1], 1),
    ([-1 -1 -1; 0 0 1; 0 1 0], -1),
    ([1 1 1; 0 0 -1; 0 1 0], -1),
    ([1 1 1; 0 0 1; 0 -1 0], -1),
    ([-1 -1 -1; 0 0 -1; 0 -1 0], -1)
]
d322_coset_coeffs = [
    ([-1 0 0; 0 0 1; 1 1 1], 1),
    ([1 0 0; 0 0 -1; 1 1 1], 1),
    ([1 0 0; 0 0 1; -1 -1 -1], 1),
    ([-1 0 0; 0 0 -1; -1 -1 -1], 1),
    ([1 0 0; 1 1 1; 0 0 1], -1),
    ([-1 0 0; -1 -1 -1; 0 0 1], -1),
    ([-1 0 0; 1 1 1; 0 0 -1], -1),
    ([1 0 0; -1 -1 -1; 0 0 -1], -1),
    ([0 0 1; 1 0 0; 1 1 1], -1),
    ([0 0 -1; -1 0 0; 1 1 1], -1),
    ([0 0 -1; 1 0 0; -1 -1 -1], -1),
    ([0 0 1; -1 0 0; -1 -1 -1], -1),
    ([0 0 -1; 1 1 1; 1 0 0], 1),
    ([0 0 1; -1 -1 -1; 1 0 0], 1),
    ([0 0 1; 1 1 1; -1 0 0], 1),
    ([0 0 -1; -1 -1 -1; -1 0 0], 1),
    ([-1 -1 -1; 1 0 0; 0 0 1], 1),
    ([1 1 1; -1 0 0; 0 0 1], 1),
    ([1 1 1; 1 0 0; 0 0 -1], 1),
    ([-1 -1 -1; -1 0 0; 0 0 -1], 1),
    ([1 1 1; 0 0 1; 1 0 0], -1),
    ([-1 -1 -1; 0 0 -1; 1 0 0], -1),
    ([-1 -1 -1; 0 0 1; -1 0 0], -1),
    ([1 1 1; 0 0 -1; -1 0 0], -1)
]
d323_coset_coeffs = [
    ([1 0 0; 0 1 0; 1 1 1], 1),
    ([-1 0 0; 0 -1 0; 1 1 1], 1),
    ([-1 0 0; 0 1 0; -1 -1 -1], 1),
    ([1 0 0; 0 -1 0; -1 -1 -1], 1),
    ([-1 0 0; 1 1 1; 0 1 0], -1),
    ([1 0 0; -1 -1 -1; 0 1 0], -1),
    ([1 0 0; 1 1 1; 0 -1 0], -1),
    ([-1 0 0; -1 -1 -1; 0 -1 0], -1),
    ([0 -1 0; 1 0 0; 1 1 1], -1),
    ([0 1 0; -1 0 0; 1 1 1], -1),
    ([0 1 0; 1 0 0; -1 -1 -1], -1),
    ([0 -1 0; -1 0 0; -1 -1 -1], -1),
    ([0 1 0; 1 1 1; 1 0 0], 1),
    ([0 -1 0; -1 -1 -1; 1 0 0], 1),
    ([0 -1 0; 1 1 1; -1 0 0], 1),
    ([0 1 0; -1 -1 -1; -1 0 0], 1),
    ([1 1 1; 1 0 0; 0 1 0], 1),
    ([-1 -1 -1; -1 0 0; 0 1 0], 1),
    ([-1 -1 -1; 1 0 0; 0 -1 0], 1),
    ([1 1 1; -1 0 0; 0 -1 0], 1),
    ([-1 -1 -1; 0 1 0; 1 0 0], -1),
    ([1 1 1; 0 -1 0; 1 0 0], -1),
    ([1 1 1; 0 1 0; -1 0 0], -1),
    ([-1 -1 -1; 0 -1 0; -1 0 0], -1)
]
d324_coset_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 0 0 1], 1),
    ([-1 0 0; 0 1 0; 0 0 -1], 1),
    ([1 0 0; 0 -1 0; 0 0 -1], 1),
    ([-1 0 0; 0 0 1; 0 1 0], -1),
    ([1 0 0; 0 0 -1; 0 1 0], -1),
    ([1 0 0; 0 0 1; 0 -1 0], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], -1),
    ([0 -1 0; 1 0 0; 0 0 1], -1),
    ([0 1 0; -1 0 0; 0 0 1], -1),
    ([0 1 0; 1 0 0; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 1 0; 0 0 1; 1 0 0], 1),
    ([0 -1 0; 0 0 -1; 1 0 0], 1),
    ([0 -1 0; 0 0 1; -1 0 0], 1),
    ([0 1 0; 0 0 -1; -1 0 0], 1),
    ([0 0 1; 1 0 0; 0 1 0], 1),
    ([0 0 -1; -1 0 0; 0 1 0], 1),
    ([0 0 -1; 1 0 0; 0 -1 0], 1),
    ([0 0 1; -1 0 0; 0 -1 0], 1),
    ([0 0 -1; 0 1 0; 1 0 0], -1),
    ([0 0 1; 0 -1 0; 1 0 0], -1),
    ([0 0 1; 0 1 0; -1 0 0], -1),
    ([0 0 -1; 0 -1 0; -1 0 0], -1)
]
d411_coset_coeffs = [
    ([1 0 0; 0 0 1; -1 -1 0], 1),
    ([-1 0 0; 0 0 -1; -1 -1 0], 1),
    ([-1 0 0; 1 0 1; 1 1 0], -1),
    ([1 0 0; -1 0 -1; 1 1 0], -1),
    ([0 0 1; 1 0 0; 1 1 0], -1),
    ([0 0 -1; -1 0 0; 1 1 0], -1),
    ([0 0 -1; 1 0 1; -1 -1 0], 1),
    ([0 0 1; -1 0 -1; -1 -1 0], 1),
    ([-1 0 -1; 1 0 0; -1 -1 0], 1),
    ([1 0 1; -1 0 0; -1 -1 0], 1),
    ([-1 0 -1; 0 0 1; 1 1 0], -1),
    ([1 0 1; 0 0 -1; 1 1 0], -1)
]
d412_coset_coeffs = [
    ([1 0 0; 0 1 0; 1 0 1], -1),
    ([-1 0 0; 0 -1 0; 1 0 1], -1),
    ([-1 0 0; 1 1 0; -1 0 -1], 1),
    ([1 0 0; -1 -1 0; -1 0 -1], 1),
    ([0 1 0; 1 0 0; -1 0 -1], 1),
    ([0 -1 0; -1 0 0; -1 0 -1], 1),
    ([0 -1 0; 1 1 0; 1 0 1], -1),
    ([0 1 0; -1 -1 0; 1 0 1], -1),
    ([-1 -1 0; 1 0 0; 1 0 1], -1),
    ([1 1 0; -1 0 0; 1 0 1], -1),
    ([-1 -1 0; 0 1 0; -1 0 -1], 1),
    ([1 1 0; 0 -1 0; -1 0 -1], 1)
]
d413_coset_coeffs = [
    ([1 0 0; 0 0 1; 0 -1 0], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], -1),
    ([-1 0 0; 1 0 1; 0 1 0], 1),
    ([1 0 0; -1 0 -1; 0 1 0], 1),
    ([0 0 1; 1 0 0; 0 1 0], 1),
    ([0 0 -1; -1 0 0; 0 1 0], 1),
    ([0 0 -1; 1 0 1; 0 -1 0], -1),
    ([0 0 1; -1 0 -1; 0 -1 0], -1),
    ([-1 0 -1; 1 0 0; 0 -1 0], -1),
    ([1 0 1; -1 0 0; 0 -1 0], -1),
    ([-1 0 -1; 0 0 1; 0 1 0], 1),
    ([1 0 1; 0 0 -1; 0 1 0], 1)
]
d414_coset_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 0 0 1], 1),
    ([-1 0 0; 1 1 0; 0 0 -1], -1),
    ([1 0 0; -1 -1 0; 0 0 -1], -1),
    ([0 1 0; 1 0 0; 0 0 -1], -1),
    ([0 -1 0; -1 0 0; 0 0 -1], -1),
    ([0 -1 0; 1 1 0; 0 0 1], 1),
    ([0 1 0; -1 -1 0; 0 0 1], 1),
    ([-1 -1 0; 1 0 0; 0 0 1], 1),
    ([1 1 0; -1 0 0; 0 0 1], 1),
    ([-1 -1 0; 0 1 0; 0 0 -1], -1),
    ([1 1 0; 0 -1 0; 0 0 -1], -1)
]
d42_coset_coeffs = [
    ([0 1 0; 0 0 -1; -1 -1 0], 1),
    ([0 -1 0; 0 0 1; -1 0 -1], -1),
    ([0 -1 0; 1 1 0; 0 0 1], -1),
    ([0 1 0; -1 -1 0; 1 0 1], 1),
    ([0 1 0; 1 0 1; 0 0 -1], 1),
    ([0 -1 0; -1 0 -1; 1 1 0], -1),
    ([0 0 1; 0 -1 0; 1 1 0], -1),
    ([0 0 -1; 0 1 0; 1 0 1], 1),
    ([0 0 -1; -1 -1 0; 0 1 0], 1),
    ([0 0 1; 1 1 0; -1 0 -1], -1),
    ([0 0 1; -1 0 -1; 0 -1 0], -1),
    ([0 0 -1; 1 0 1; -1 -1 0], 1),
    ([-1 -1 0; 0 1 0; 0 0 -1], 1),
    ([1 1 0; 0 -1 0; -1 0 -1], -1),
    ([1 1 0; 0 0 1; 0 -1 0], -1),
    ([-1 -1 0; 0 0 -1; 1 0 1], 1),
    ([-1 -1 0; 1 0 1; 0 1 0], 1),
    ([1 1 0; -1 0 -1; 0 0 1], -1),
    ([-1 0 -1; 0 -1 0; 0 0 1], -1),
    ([1 0 1; 0 1 0; -1 -1 0], 1),
    ([1 0 1; 0 0 -1; 0 1 0], 1),
    ([-1 0 -1; 0 0 1; 1 1 0], -1),
    ([-1 0 -1; 1 1 0; 0 -1 0], -1),
    ([1 0 1; -1 -1 0; 0 0 -1], 1)
]
d51_coset_coeffs = [
    ([1 1 1; 0 -1 0; 0 0 -1], -1),
    ([-1 -1 -1; 0 1 0; 1 1 0], 1),
    ([-1 -1 -1; 0 0 1; 0 1 0], -1),
    ([1 1 1; 0 0 -1; -1 0 -1], 1),
    ([1 1 1; -1 -1 0; 0 -1 0], 1),
    ([-1 -1 -1; 1 1 0; 1 0 1], -1),
    ([-1 -1 -1; 1 0 1; 0 0 1], 1),
    ([1 1 1; -1 0 -1; -1 -1 0], -1)
]
d52_coset_coeffs = [
    ([0 0 1; 1 0 0; 1 1 0], -1),
    ([0 0 -1; -1 0 0; 1 1 1], 1),
    ([0 0 -1; -1 -1 0; -1 0 0], -1),
    ([0 0 1; 1 1 0; -1 0 -1], 1),
    ([0 0 -1; 1 0 1; -1 -1 0], 1),
    ([0 0 1; -1 0 -1; -1 -1 -1], -1),
    ([0 0 1; -1 -1 -1; 1 0 0], 1),
    ([0 0 -1; 1 1 1; 1 0 1], -1)
]
d53_coset_coeffs = [
    ([0 -1 0; -1 0 0; -1 0 -1], 1),
    ([0 1 0; 1 0 0; -1 -1 -1], -1),
    ([0 1 0; -1 -1 0; 1 0 1], -1),
    ([0 -1 0; 1 1 0; 1 1 1], 1),
    ([0 1 0; 1 0 1; 1 0 0], 1),
    ([0 -1 0; -1 0 -1; 1 1 0], -1),
    ([0 -1 0; 1 1 1; -1 0 0], -1),
    ([0 1 0; -1 -1 -1; -1 -1 0], 1)
]
d54_coset_coeffs = [
    ([-1 0 -1; 1 0 0; 0 -1 0], -1),
    ([1 0 1; -1 0 0; -1 -1 -1], 1),
    ([1 0 1; 0 1 0; -1 0 0], -1),
    ([-1 0 -1; 0 -1 0; 0 0 1], 1),
    ([1 0 1; 0 0 -1; 0 1 0], 1),
    ([-1 0 -1; 0 0 1; 1 1 1], -1),
    ([-1 0 -1; 1 1 1; 1 0 0], 1),
    ([1 0 1; -1 -1 -1; 0 0 -1], -1)
]
d55_coset_coeffs = [
    ([1 1 0; -1 0 0; 0 0 1], 1),
    ([-1 -1 0; 1 0 0; 1 1 1], -1),
    ([-1 -1 0; 0 1 0; 0 0 -1], -1),
    ([1 1 0; 0 -1 0; -1 -1 -1], 1),
    ([-1 -1 0; 0 0 -1; 1 0 0], 1),
    ([1 1 0; 0 0 1; 0 -1 0], -1),
    ([1 1 0; -1 -1 -1; -1 0 0], -1),
    ([-1 -1 0; 1 1 1; 0 1 0], 1)
]
d56_coset_coeffs = [
    ([1 0 0; 0 1 0; 0 0 1], 1),
    ([-1 0 0; 0 -1 0; 1 0 1], -1),
    ([-1 0 0; 0 0 -1; 0 -1 0], 1),
    ([1 0 0; 0 0 1; -1 -1 0], -1),
    ([-1 0 0; 1 1 0; 0 0 -1], -1),
    ([1 0 0; -1 -1 0; -1 0 -1], 1),
    ([1 0 0; -1 0 -1; 0 1 0], -1),
    ([-1 0 0; 1 0 1; 1 1 0], 1)
]

# Compute the stabilisers as subgroups of SL(3,Z)
m2_stab = [(gelt_from_matrix(M),σ) for (M,σ) in m2_arrays_coeffs]
m31_stab = [(gelt_from_matrix(M),σ) for (M,σ) in m31_arrays_coeffs]
m32_stab = [(gelt_from_matrix(M),σ) for (M,σ) in m32_arrays_coeffs]
m4_stab = [(gelt_from_matrix(M),σ) for (M,σ) in m4_arrays_coeffs]
m5_stab = [(gelt_from_matrix(M),σ) for (M,σ) in m5_arrays_coeffs]

# Store cosets describing the differentials as subsets of G = SL(3,Z)
d311_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d311_coset_coeffs]
d312_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d312_coset_coeffs]
d313_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d313_coset_coeffs]
d321_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d321_coset_coeffs]
d322_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d322_coset_coeffs]
d323_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d323_coset_coeffs]
d324_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d324_coset_coeffs]
d411_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d411_coset_coeffs]
d412_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d412_coset_coeffs]
d413_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d413_coset_coeffs]
d414_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d414_coset_coeffs]
d42_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d42_coset_coeffs]
d51_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d51_coset_coeffs]
d52_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d52_coset_coeffs]
d53_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d53_coset_coeffs]
d54_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d54_coset_coeffs]
d55_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d55_coset_coeffs]
d56_coset = [(gelt_from_matrix(M),σ) for (M,σ) in d56_coset_coeffs]

# Compute the support (i.e. half_basis) for the group ring over which we'll try to find a spectral gap.
# half_basis is quite minimalistic - we just add to half_basis the coset elements appearing in the differentials.
half_basis = unique(
    union(
        [g for (g,σ) in d311_coset], [g for (g,σ) in d312_coset], [g for (g,σ) in d313_coset], 
        [g for (g,σ) in d321_coset], [g for (g,σ) in d322_coset], [g for (g,σ) in d323_coset], [g for (g,σ) in d324_coset], 
        [g for (g,σ) in d411_coset], [g for (g,σ) in d412_coset], [g for (g,σ) in d413_coset], 
        [g for (g,σ) in d414_coset], [g for (g,σ) in d42_coset],
        [g for (g,σ) in d51_coset], [g for (g,σ) in d52_coset], [g for (g,σ) in d53_coset], 
        [g for (g,σ) in d54_coset], [g for (g,σ) in d55_coset], [g for (g,σ) in d56_coset]
    )
)
half_basis = unique([half_basis;inv.(half_basis)])

# Compute the group ring (with standard multiplciation by convolution: (1+g)(1+h)=1+g+h+gh)
RG = LowCohomologySOS.group_ring(sl3, half_basis, star_multiplication = false)

# Compute the differential as matrices over RG
d3₁ = rg_elt([
    (1,averaged_rep(d311_coset, RG)),
    (-1,averaged_rep(d312_coset, RG)),
    (-1,averaged_rep(d313_coset, RG))
])
d3₂ = rg_elt([
    (1,averaged_rep(d321_coset, RG)),
    (-1,averaged_rep(d322_coset, RG)),
    (1,averaged_rep(d323_coset, RG)),
    (-1,averaged_rep(d324_coset, RG))
])
d4₁ = rg_elt([
    (-1,averaged_rep(d411_coset, RG)),
    (1,averaged_rep(d412_coset, RG)),
    (-1,averaged_rep(d413_coset, RG)),
    (1,averaged_rep(d414_coset, RG))
])
d4₂ = rg_elt([
    (1,averaged_rep(d42_coset, RG))
])
d5 = rg_elt([
    (1,averaged_rep(d51_coset, RG)),
    (-1,averaged_rep(d52_coset, RG)),
    (1,averaged_rep(d53_coset, RG)),
    (-1,averaged_rep(d54_coset, RG)),
    (1,averaged_rep(d55_coset, RG)),
    (-1,averaged_rep(d56_coset, RG))
])
d₃ = [d3₁ d3₂]
d₄ = [
    d4₁;
    d4₂
]
d₅ = reshape([d5], 1, 1);