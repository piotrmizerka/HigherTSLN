# Compute the cell structure for SL5. At the moment, this is actually just the data from Dana Yasaki. Maybe redo on our own at some point.

using Pkg
Pkg.activate(normpath(joinpath(@__DIR__, "../../")))
using Revise
using LinearAlgebra
ENV["JULIA_NUM_THREADS"] = Sys.CPU_THREADS÷2
LinearAlgebra.BLAS.set_num_threads(Sys.CPU_THREADS÷2)

using Serialization
using SLnCohomology

#SL_5 specific stuff, move later
# list of vertices
vertices_Voronoi_5 = [
[ 0, 0, 0, 0, 1 ],
[ 0, 0, 0, 1, -1 ],
[ 0, 0, 0, 1, 0 ],
[ 0, 0, 1, -1, 0 ],
[ 0, 0, 1, 0, -1 ],
[ 0, 0, 1, 0, 0 ],
[ 0, 0, 1, 0, 1 ],
[ 0, 0, 1, 1, -1 ],
[ 0, 0, 1, 1, 0 ],
[ 0, 1, -1, 0, 0 ],
[ 0, 1, 0, -1, 0 ],
[ 0, 1, 0, 0, -1 ],
[ 0, 1, 0, 0, 0 ],
[ 0, 1, 0, 0, 1 ],
[ 0, 1, 0, 1, -1 ],
[ 0, 1, 0, 1, 0 ],
[ 0, 1, 1, 0, -1 ],
[ 0, 1, 1, 1, 1 ],
[ 1, -1, 0, 0, 0 ],
[ 1, 0, -1, 0, 0 ],
[ 1, 0, 0, -1, 0 ],
[ 1, 0, 0, 0, -1 ],
[ 1, 0, 0, 0, 0 ],
[ 1, 0, 0, 0, 1 ],
[ 1, 0, 0, 1, -1 ],
[ 1, 0, 0, 1, 0 ],
[ 1, 0, 1, 0, -1 ],
[ 1, 0, 1, 1, 1 ],
[ 1, 1, 0, 0, -1 ],
[ 1, 1, 0, 1, 1 ],
[ 1, 1, 1, 1, 1 ]
]

# the following is a list containing a representative of each orbit of cells
# in the tesselation. It starts with cells of dimension 4 and is ordered
# by dimension.
# ATTENTION: The indexing here starts at 1, not at 0.
indices_k_cells = [
[
[ 3, 6, 8, 12, 19 ],
[ 8, 12, 13, 20, 21 ]
],
[
[ 3, 6, 8, 12, 13, 19 ],
[ 3, 8, 12, 13, 15, 19 ],
[ 3, 6, 8, 13, 15, 19 ],
[ 6, 8, 12, 13, 20, 21 ],
[ 3, 8, 13, 15, 20, 21 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19 ],
[ 3, 6, 8, 12, 13, 19, 20 ],
[ 3, 6, 8, 13, 15, 19, 20 ],
[ 3, 6, 12, 13, 15, 19, 20 ],
[ 3, 6, 8, 12, 13, 20, 21 ],
[ 3, 6, 8, 13, 15, 20, 21 ],
[ 3, 8, 12, 13, 15, 20, 21 ],
[ 3, 6, 8, 12, 15, 19, 21 ],
[ 3, 6, 8, 12, 15, 19, 22 ],
[ 3, 6, 12, 19, 21, 22, 23 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19, 20 ],
[ 3, 6, 8, 12, 13, 19, 20, 21 ],
[ 3, 6, 8, 12, 13, 15, 20, 21 ],
[ 3, 6, 8, 12, 13, 15, 19, 21 ],
[ 3, 6, 8, 13, 15, 19, 20, 21 ],
[ 3, 6, 8, 12, 13, 15, 19, 22 ],
[ 3, 6, 12, 13, 15, 19, 21, 22 ],
[ 3, 6, 8, 12, 19, 21, 22, 23 ],
[ 3, 6, 8, 12, 19, 20, 21, 23 ],
[ 3, 6, 12, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 20, 21, 23 ],
[ 3, 6, 12, 13, 20, 21, 22, 23 ],
[ 3, 6, 12, 13, 19, 21, 22, 23 ],
[ 3, 6, 8, 13, 19, 20, 21, 23 ],
[ 3, 6, 12, 13, 19, 20, 21, 29 ],
[ 3, 6, 12, 13, 19, 22, 23, 29 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19, 20, 21 ],
[ 3, 6, 8, 12, 13, 15, 19, 21, 22 ],
[ 3, 8, 12, 13, 15, 19, 20, 21, 22 ],
[ 3, 6, 8, 13, 15, 19, 20, 21, 22 ],
[ 3, 6, 8, 12, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 19, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 23 ],
[ 3, 6, 12, 13, 19, 20, 21, 22, 23 ],
[ 6, 8, 12, 13, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 13, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 15, 20, 22, 23 ],
[ 3, 6, 12, 13, 15, 20, 21, 22, 23 ],
[ 3, 6, 12, 13, 15, 19, 21, 22, 23 ],
[ 3, 6, 12, 13, 15, 19, 20, 22, 23 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 29 ],
[ 3, 6, 12, 13, 19, 20, 21, 22, 29 ],
[ 3, 6, 12, 13, 19, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 19, 22, 23, 29 ],
[ 6, 8, 12, 13, 19, 21, 22, 23, 29 ],
[ 3, 6, 12, 13, 19, 20, 21, 23, 29 ],
[ 3, 6, 12, 13, 15, 20, 22, 23, 29 ],
[ 2, 6, 8, 12, 13, 19, 22, 23, 29 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19, 20, 21, 22 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 15, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 15, 19, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 22, 23 ],
[ 3, 6, 12, 13, 15, 19, 20, 21, 22, 23 ],
[ 3, 8, 12, 13, 15, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 13, 15, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 22, 29 ],
[ 3, 6, 8, 12, 13, 19, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 23, 29 ],
[ 3, 6, 12, 13, 19, 20, 21, 22, 23, 29 ],
[ 3, 6, 12, 13, 15, 19, 20, 21, 22, 29 ],
[ 3, 8, 12, 13, 15, 19, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 15, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 15, 20, 22, 23, 29 ],
[ 3, 6, 12, 13, 15, 19, 20, 22, 23, 29 ],
[ 3, 8, 13, 15, 19, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 13, 19, 21, 22, 23, 29 ],
[ 2, 6, 8, 12, 13, 15, 19, 21, 23, 29 ],
[ 2, 6, 8, 12, 13, 15, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 19, 20, 22, 23, 25 ],
[ 3, 6, 8, 12, 19, 20, 22, 23, 25, 29 ],
[ 6, 8, 13, 15, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 13, 15, 17, 19, 20, 21, 22 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 13, 19, 20, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 21, 22, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 22, 23, 29 ],
[ 3, 6, 12, 13, 15, 19, 20, 21, 22, 23, 29 ],
[ 3, 6, 8, 13, 15, 19, 21, 22, 23, 25, 29 ],
[ 2, 3, 6, 11, 12, 13, 15, 19, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 13, 15, 19, 21, 22, 23, 29 ],
[ 2, 6, 8, 12, 15, 19, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 22, 23, 25 ],
[ 3, 6, 8, 12, 13, 19, 20, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 20, 22, 23, 25, 29 ],
[ 3, 6, 8, 13, 15, 19, 20, 21, 22, 23, 25 ],
[ 3, 6, 8, 13, 15, 20, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 13, 19, 20, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 17, 19, 20, 21, 22 ],
[ 3, 6, 8, 12, 15, 17, 19, 20, 21, 22, 25 ],
[ 6, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25 ],
[ 3, 6, 8, 15, 17, 19, 20, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 17, 19, 20, 21, 23, 25, 29 ],
[ 2, 6, 8, 11, 12, 17, 19, 20, 23, 25, 29 ]
],
[
[ 3, 6, 8, 12, 13, 15, 19, 20, 21, 22, 23, 29 ],
[ 2, 3, 6, 8, 11, 12, 13, 15, 19, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 19, 20, 22, 23, 25, 29 ],
[ 3, 6, 8, 13, 15, 19, 20, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 13, 15, 19, 20, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 15, 19, 20, 21, 22, 23, 25, 29 ],
[ 2, 3, 6, 8, 11, 12, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 11, 12, 13, 15, 19, 20, 21, 22, 29 ],
[ 3, 6, 8, 12, 13, 15, 17, 19, 20, 21, 22, 23 ],
[ 3, 6, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25 ],
[ 3, 6, 8, 15, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 15, 17, 19, 20, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 15, 17, 19, 20, 21, 22, 25, 29 ],
[ 2, 6, 8, 12, 15, 17, 19, 20, 21, 23, 25, 29 ],
[ 2, 6, 8, 11, 12, 17, 19, 20, 21, 23, 25, 29 ],
[ 3, 6, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ]
],
[
[ 2, 3, 6, 8, 11, 12, 13, 15, 19, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 13, 15, 17, 19, 20, 21, 22, 23, 29 ],
[ 3, 6, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 13, 15, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 2, 6, 8, 12, 13, 15, 17, 19, 20, 22, 23, 25, 29 ],
[ 2, 6, 8, 11, 12, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ],
[ 3, 6, 12, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ]
],
[
[ 2, 3, 6, 8, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 25, 29 ],
[ 3, 6, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ],
[ 3, 6, 8, 13, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ],
[ 3, 4, 6, 12, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ]
],
[
[ 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 25, 27, 29 ],
[ 1, 3, 6, 7, 9, 13, 14, 16, 18, 23, 24, 26, 28, 30, 31 ],
[ 1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 19, 20, 21, 22, 23 ]
]
]

cells_GL5 = Dict()
for dimension in range(4,14)
    cells_current_dimension = []
    for cell_indices in indices_k_cells[dimension-3]
        cell = reduce(hcat,[vertices_Voronoi_5[index] for index in cell_indices])
        push!(cells_current_dimension, cell)
    end
    cells_GL5[dimension] = cells_current_dimension
    number_cells = length(cells_current_dimension)
    println("Number of cells in dimension $dimension: $number_cells")
end

serialize(joinpath(@__DIR__, "precomputed_cells/sl5_cells.sjl"), cells_GL5)